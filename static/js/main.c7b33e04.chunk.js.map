{"version":3,"sources":["leaderfocus/assert/campaign_1.pdf","leaderfocus/assert/leaderfocus_logo.png","logo.svg","component/view.js","leaderfocus/header/leaderfocusHeader.js","component/styleSchema.js","leaderfocus/footer/leaderfocusFooter.js","leaderfocus/leaderfocusLayout.js","leaderfocus/product/shuang_fu/mianWang.js","home/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","View","props","style","styles","rootContainer","children","display","LeaderfocusHeader","alt","src","LOGO","logoImage","boxShadow","padding","paddingTop","paddingBottom","maxHeight","maxWidth","EMAIL","href","alignItems","justifyContent","LeaderfocusLayout","MianWang","PDF","pdfIFrame","flex","flexDirection","marginLeft","marginRight","width","Home","margin","logo","App","height","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,oKCE5B,SAASC,EAAKC,GAC3B,OACE,yBAAKC,MAAK,eAAOC,EAAOC,cAAd,GAAgCH,EAAMC,QAC7CD,EAAMI,UAKb,IAAMF,EAAS,CACbC,cAAe,CACbE,QAAS,S,kCCRE,SAASC,EAAkBN,GACxC,OACE,yBAAKC,MAAOC,EAAOC,eACjB,yBAAKI,IAAI,OAAOC,IAAKC,IAAMR,MAAOC,EAAOQ,aAK/C,IAAMR,EAAS,CACbC,cAAe,CACbQ,UCbS,mEDcTC,QAAS,GACTC,WAAY,EACZC,cAAe,GAEjBJ,UAAW,CACTK,UAAW,IACXC,SAAU,SEjBRC,EAAQ,wBAGC,SAASX,EAAkBN,GACxC,OACE,kBAACD,EAAD,CAAME,MAAOC,EAAOC,eAClB,mDAPU,qFAQV,mDANQ,aAOR,uBAAGe,KAAI,iBAAYD,IACjB,4CAAcA,MAMtB,IAAMf,EAAS,CACbC,cAAe,CACbgB,WAAY,SACZC,eAAgB,eAChBN,cAAe,EACfD,WAAY,ICpBD,SAASQ,EAAkBrB,GACxC,OACE,oCACE,kBAACM,EAAD,MACCN,EAAMI,SACP,kBAAC,EAAD,OCJS,SAASkB,EAAStB,GAC/B,OACE,kBAACqB,EAAD,KACE,kBAACtB,EAAD,CAAME,MAAOC,EAAOC,eAClB,oEACA,2BAAOK,IAAKe,IAAKtB,MAAOC,EAAOsB,cAMvC,IAAMtB,EAAS,CACbC,cAAe,CACbsB,KAAM,EACNC,cAAe,SACfC,WAAY,GACZC,YAAa,IAEfJ,UAAW,CACTC,KAAM,EACNI,MAAO,S,iBCtBI,SAASC,IACtB,OACE,yBAAK7B,MAAO,CAAE8B,OAAQ,KACpB,gCACE,yBAAKvB,IAAKwB,IAAM/B,MAAO,CAAEc,UAAW,KAAOR,IAAI,SAC/C,4GAIA,+ECMO0B,MAbf,WACE,OACE,yBAAKhC,MAAO,CAAEI,QAAS,OAAQqB,cAAe,SAAUQ,OAAQ,UAC9D,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,0BAA0BC,UAAWd,IACjD,kBAAC,IAAD,CAAOa,KAAK,IAAIC,UAAWN,QCCjBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c7b33e04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/campaign_1.cb7e4eea.pdf\";","module.exports = __webpack_public_path__ + \"static/media/leaderfocus_logo.9a423d53.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nexport default function View(props) {\n  return (\n    <div style={{ ...styles.rootContainer, ...props.style }}>\n      {props.children}\n    </div>\n  );\n}\n\nconst styles = {\n  rootContainer: {\n    display: \"flex\",\n  },\n};\n","import React from \"react\";\nimport { styleSchema } from \"../../component/styleSchema\";\nimport LOGO from \"../assert/leaderfocus_logo.png\";\n\nexport default function LeaderfocusHeader(props) {\n  return (\n    <div style={styles.rootContainer}>\n      <img alt=\"logo\" src={LOGO} style={styles.logoImage} />\n    </div>\n  );\n}\n\nconst styles = {\n  rootContainer: {\n    boxShadow: styleSchema.boxShadow,\n    padding: 20,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  logoImage: {\n    maxHeight: 100,\n    maxWidth: \"100%\",\n  },\n};\n","export const styleSchema = {\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n};\n","import React from \"react\";\nimport View from \"../../component/view\";\n\nconst ADDRESS = \"澳門漁翁街永好工業大廈7樓G座\";\nconst EMAIL = \"leaderfocus@gmail.com\";\nconst PHONE = \"28719871\";\n\nexport default function LeaderfocusHeader(props) {\n  return (\n    <View style={styles.rootContainer}>\n      <p>{`地址: ${ADDRESS}`}</p>\n      <p>{`電話: ${PHONE}`}</p>\n      <a href={`mailto:${EMAIL}`}>\n        <p>{`Email: ${EMAIL}`}</p>\n      </a>\n    </View>\n  );\n}\n\nconst styles = {\n  rootContainer: {\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    paddingBottom: 5,\n    paddingTop: 5,\n  },\n};\n","import React from \"react\";\nimport LeaderfocusHeader from \"./header/leaderfocusHeader\";\nimport LeaderfocusFooter from \"./footer/leaderfocusFooter\";\n\nexport default function LeaderfocusLayout(props) {\n  return (\n    <>\n      <LeaderfocusHeader />\n      {props.children}\n      <LeaderfocusFooter />\n    </>\n  );\n}\n","import React from \"react\";\nimport View from \"../../../component/view\";\nimport PDF from \"../../assert/campaign_1.pdf\";\nimport LeaderfocusLayout from \"../../leaderfocusLayout\";\n\nexport default function MianWang(props) {\n  return (\n    <LeaderfocusLayout>\n      <View style={styles.rootContainer}>\n        <h2>內蒙雙福面王</h2>\n        <embed src={PDF} style={styles.pdfIFrame} />\n      </View>\n    </LeaderfocusLayout>\n  );\n}\n\nconst styles = {\n  rootContainer: {\n    flex: 1,\n    flexDirection: \"column\",\n    marginLeft: 20,\n    marginRight: 20,\n  },\n  pdfIFrame: {\n    flex: 1,\n    width: \"100%\",\n  },\n};\n","import React from \"react\";\nimport logo from \"../logo.svg\";\n\nexport default function Home() {\n  return (\n    <div style={{ margin: 20 }}>\n      <header>\n        <img src={logo} style={{ maxHeight: 100 }} alt=\"logo\" />\n        <p>\n          This website and advertisment was constructed and distributed by\n          GooWhere.com\n        </p>\n        <p>All rights are reserved to Tensor Tenology Ltd</p>\n      </header>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport MianWang from \"./leaderfocus/product/shuang_fu/mianWang\";\nimport Home from \"./home/home\";\n\nfunction App() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\" }}>\n      <Router>\n        <Switch>\n          <Route path=\"/leaderfocus/campaign_1\" component={MianWang} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}